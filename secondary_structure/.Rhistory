barplot(pct,ylab="Fragments",names.arg=lbls,main="No.of frag_rep with >1 domain",cex.main=1)
text(0.7,1100,"880")
text(1.9,1700,"1286")
text(3.1,2100,"3711")
pct<-c(880,1286,3711,4388)
barplot(pct,ylab="Fragments",names.arg=lbls,main="No.of frag_rep with >1 domain",cex.main=1)
text(0.7,1100,"880")
text(1.9,1700,"1286")
text(3.1,2100,"3711")
text(4.3,2500,"4388")
barplot(pct,ylab="Fragments",names.arg=lbls,main="No.of unique domains",cex.main=1)
text(0.7,1100,"880")
text(1.9,1700,"1286")
text(3.1,2100,"3711")
text(4.3,2500,"4388")
pct<-c(21,52,397,1023)
barplot(pct,ylab="Fragments",names.arg=lbls,main="No.of frag_rep with >1 domains",cex.main=1)
text(0.7,70,"21")
text(1.9,200,"52")
text(3.1,300,"397")
text(4.3,400,"1023")
pct<-c(45,120,519,1424)
barplot(pct,ylab="Fragments",names.arg=lbls,main="No.of frag_rep with domain repeats",cex.main=1)
text(0.7,70,"45")
barplot(pct,ylab="Fragments",names.arg=lbls,main="No.of frag_rep with domain repeats",cex.main=1)
text(0.7,200,"45")
text(1.9,400,"120")
text(3.1,600,"519")
text(4.3,800,"1424")
install.packages("ggpubr")
data("ToothGrowth")
head(ToothGrowth)
# Box plot (bp)
bxp <- ggboxplot(ToothGrowth, x = "dose", y = "len",
color = "dose", palette = "jco")
library(ggplot2)
data("ToothGrowth")
head(ToothGrowth)
# Box plot (bp)
bxp <- ggboxplot(ToothGrowth, x = "dose", y = "len",
color = "dose", palette = "jco")
library(ggpubr)
library('ggpubr')
install.packages("ggpubr")
install.packages("cowplot")
# SS vs Evidence plot #TYR
par(oma=c(0,0,0,0),mar=c(2,2,2,2),mfrow=c(3,4))
Count<-c(163,125,127)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(47/163*100,83/163*100,33/163*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil (n=163)"
)
CountI<-c(39/125*100,46/125*100,40/125*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=125)"
)
CountB<-c(50/127*100,38/127*100,39/127*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=127)"
)
Count<-c(39,11,27)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(14/39*100,13/39*100,12/39*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil (n=39)"
)
CountI<-c(6/11*100,3/11*100,2/11*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=11)"
)
CountB<-c(10/27*100,6/27*100,11/27*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=27)"
)
Count<-c(0,2,3)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(0/0*100,0/0*100,0/0*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil(n=0)"
)
CountI<-c(1/2*100,1/2*100,0/2*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=2)"
)
CountB<-c(1/3*100,1/3*100,1/3*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=3)"
)
mtext(text="Tyrosine P-sites Sec.str vs Evidence",side=3,line=0.5,outer=T)
mtext(text="Surface",side=3,line=-14.5,outer=TRUE,at=0.125)
mtext(text="Interface",side=3,line=-28,outer=TRUE,at=0.125)
mtext(text="Buried",side=3,line=-42,outer=TRUE,at=0.125)
#################################### Serine plot ###############################
Count<-c(845,120,349)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(579/845*100,116/845*100,150/845*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil (n=845)"
)
CountI<-c(71/120*100,14/120*100,35/120*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=120)"
)
CountB<-c(213/349*100,51/349*100,85/349*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=349)"
)
Count<-c(147,21,54)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(98/147*100,35/147*100,14/147*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil (n=147)"
)
CountI<-c(16/21*100,2/21*100,3/21*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=21)"
)
CountB<-c(31/54*100,14/54*100,9/54*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=54)"
)
Count<-c(8,9,8)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(6/8*100,1/8*100,1/8*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil(n=8)"
)
CountI<-c(7/9*100,1/9*100,1/9*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=9)"
)
CountB<-c(3/8*100,1/8*100,4/8*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=8)"
)
mtext(text="Serine P-sites Sec.str vs Evidence",side=3,line=0.5,outer=T)
mtext(text="Surface",side=3,line=-14.5,outer=TRUE,at=0.125)
mtext(text="Interface",side=3,line=-28,outer=TRUE,at=0.125)
mtext(text="Buried",side=3,line=-42.4,outer=TRUE,at=0.125)
#################################### THR plot ###############################
Count<-c(305,61,96)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(178/305*100,74/305*100,53/305*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil (n=305)"
)
CountI<-c(39/61*100,12/61*100,10/61*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=61)"
)
CountB<-c(54/96*100,21/96*100,21/96*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=96)"
)
Count<-c(47,11,18)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(31/47*100,15/47*100,1/47*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil (n=47)"
)
CountI<-c(6/11*100,1/11*100,4/11*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=11)"
)
CountB<-c(5/18*100,6/18*100,7/18*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=18)"
)
Count<-c(0,3,9)
cols<-c('seagreen4','orange','red')
labs<-c('C','E','H')
percentlabels<- round(100*Count/sum(Count), 1)
pielabels<- paste(percentlabels, "%", sep="")
#pie chart
pie(Count,labels=pielabels,
, radius=1.0,
col=cols,
border='white',
clockwise=T,cex=0.77
)
#legend("topright", legend=labs,fill=cols,border=NA, bty='n',horiz = F)
#legend(x="center", ncol=3,legend=labs,fill=cols, border=NA, bty='n')
CountS<-c(0/0*100,0/0*100,0/0*100)
barplot(CountS,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('seagreen4','mediumseagreen','palegreen2'),main="Coil(n=0)"
)
CountI<-c(3/3*100,0/3*100,0/3*100)
barplot(CountI,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,100),
col=c('orange1','sandybrown','lightsalmon'),main="Sheet (n=3)"
)
CountB<-c(4/9*100,1/9*100,4/9*100)
barplot(CountB,names.arg=c('C','E','S'),
,cex.main=1,ylim = c(0,70),
col=c('red3','firebrick1','indianred1'),main="Helix (n=9)"
)
mtext(text="Threonine P-sites Sec.str vs Evidence",side=3,line=0.5,outer=T)
mtext(text="Surface",side=3,line=-14.5,outer=TRUE,at=0.125)
mtext(text="Interface",side=3,line=-29,outer=TRUE,at=0.125)
mtext(text="Buried",side=3,line=-44,outer=TRUE,at=0.125)
all_up<-c(7528,437)
all_Pride<-c(7528,6200)
data<-cbind(all_Pride,all_up)
#data=as.matrix(all_Pride,all_up)
colnames(data)=c("PRIDE","UniProt")
#rownames(data)=c("var1","var2","var3")
# Get the stacked barplot
barplot(data, col=c('cyan4','orange3') , border="white", space=0.02, font.axis=1)
strut_UP<-c(1719,417)
str_Pride<-c(1719,2206)
data<-cbind(str_Pride,strut_UP)
#data=as.matrix(str_Pride,strut_UP)
colnames(data)=c("PRIDE","UniProt")
#rownames(data)=c("var1","var2","var3")
# Get the stacked barplot
barplot(data, col=c('cyan4','orange3') , border="white", space=0.02, font.axis=1,ylim=c(0,5000))
par(mfrow = c(1, 2))
#Create data
all_up<-c(7528,437)
all_Pride<-c(7528,6200)
data<-cbind(all_Pride,all_up)
#data=as.matrix(all_Pride,all_up)
colnames(data)=c("PRIDE","UniProt")
#rownames(data)=c("var1","var2","var3")
# Get the stacked barplot
barplot(data, col=c('cyan4','orange3') , border="white", space=0.02, font.axis=1)
strut_UP<-c(1719,417)
str_Pride<-c(1719,2206)
data<-cbind(str_Pride,strut_UP)
#data=as.matrix(str_Pride,strut_UP)
colnames(data)=c("PRIDE","UniProt")
#rownames(data)=c("var1","var2","var3")
# Get the stacked barplot
barplot(data, col=c('cyan4','orange3') , border="white", space=0.02, font.axis=1,ylim=c(0,5000))
par(mfrow = c(1, 2))
#Create data
all_up<-c(7528,437)
all_Pride<-c(7528,6200)
data<-cbind(all_Pride,all_up)
#data=as.matrix(all_Pride,all_up)
colnames(data)=c("PRIDE","UniProt")
#rownames(data)=c("var1","var2","var3")
# Get the stacked barplot
barplot(data, col=c('cyan4','orange3') , border="white", space=0.02, font.axis=1)
strut_UP<-c(1719,417)
str_Pride<-c(1719,2206)
data<-cbind(str_Pride,strut_UP)
#data=as.matrix(str_Pride,strut_UP)
colnames(data)=c("PRIDE","UniProt")
#rownames(data)=c("var1","var2","var3")
# Get the stacked barplot
barplot(data, col=c('cyan4','orange3') , border="white", space=0.02, font.axis=1,ylim=c(0,12500))
all_up<-c(7528,437)
all_Pride<-c(7528,6200)
data<-cbind(all_Pride,all_up)
#data=as.matrix(all_Pride,all_up)
colnames(data)=c("PRIDE","UniProt")
#rownames(data)=c("var1","var2","var3")
# Get the stacked barplot
barplot(data, col=c('cyan4','orange3') , border="white", space=0.02, font.axis=1)
strut_UP<-c(1719,417)
str_Pride<-c(1719,2206)
data<-cbind(str_Pride,strut_UP)
#data=as.matrix(str_Pride,strut_UP)
colnames(data)=c("PRIDE","UniProt")
#rownames(data)=c("var1","var2","var3")
# Get the stacked barplot
barplot(data, col=c('cyan4','orange3') , border="white", space=0.02, font.axis=1,ylim=c(0,13500))
Puromycin<-data(Puromycin)
Puromycin<-data("Puromycin)
Puromycin<-data("Puromycin")
Puromycin<-data("Puromycin")
Puromycin
data()
data()
Puromycin
Puromycin
Puromycin
?lm
example(lm)
x_untreated<-untreated_cells$conc
x_treated<-treated_cells$conc
y_treated<-treated_cells$rate
plot(x_treated,y_treated,col='blue',xlab = 'conc',ylab = 'rate',main = 'Michaelis Menten plot')
treated_cells <- Puromycin[Puromycin$state == "treated",]
untreated_cells <- Puromycin[Puromycin$state == "untreated",]
summary(treated_cells)
summary(untreated_cells)
#----------------------------------------------------------------
#Question C
#----------------------------------------------------------------
x_treated<-treated_cells$conc
y_treated<-treated_cells$rate
plot(x_treated,y_treated,col='blue',xlab = 'conc',ylab = 'rate',main = 'Michaelis Menten plot')
treated_cells <- Puromycin[Puromycin$state == "treated",]
treated_cells <- Puromycin[Puromycin$state == "treated",]
treated_cells <- Puromycin[Puromycin$state == "treated",]
treated_cells <- Puromycin[Puromycin$state == "treated",]
untreated_cells <- Puromycin[Puromycin$state == "untreated",]
summary(treated_cells)
summary(untreated_cells)
library("graph")
mynodes<-c("Student_1","Student_2","Professor","Assistant","Assistant_wife","Assistant_wife_boss")
myedges<-list(
Student_1=list(edges=c("Assistant","Professor","Student_2")),
Student_2=list(edges=c("Assistant","Professor","Student_1")),
Professor=list(edges=c("Assistant","Student_1","Student_2")),
Assistant=list(edges=c("Professor","Student_1","Student_2","Assistant_wife")),
Assistant_wife =list(edges=c("Assistant","Assistant_wife_boss")),
Assistant_wife_boss =list(edges=c("Assistant_wife"))
)
g<-new("graphNEL",nodes=mynodes,edgeL=myedges,edgemode="undirected")
?new()
plot(g)
biocLite("yeastExpData")
library("yeastExpData")
source("http://bioconductor.org/biocLite.R")
library("yeastExpData")
biocLite("yeastExpData")
biocLite("RBGL")
biocLite("Biobase")
library("yeastExpData")
data("litG")
data("ccyclered")
help("ccyclered")
str(ccyclered)
cc=connComp(litG) #creates the graph
ord = order(listLen(cc), decreasing = TRUE) #sorts the graph from the largest cluster size to the smallest
library("Biobase")
ord = order(listLen(cc), decreasing = TRUE) #sorts the graph from the largest cluster size to the smallest
ord
cc
sG1 = subGraph(cc [[ord[1]]], litG) #gets the largest cluster in the dataset
sG1
lsG1 = agopen(sG1, layoutType = "neato", nodeAttrs = makeNodeAttrs(sG1, fillcolor = "steelblue2"), name = "sG1")
lsG1
plot(lsG1)
clusts=with(ccyclered, split(Y.name, Cluster)) #generates a list of the 30 clusters
clusts=with(ccyclered, split(Y.name, Cluster)) #generates a list of the 30 clusters
clusts
clG = new("clusterGraph", clusters = clusts) #generates a new clustergraph out of the 30 original clusters
commonG = intersection(clG, litG)
commonG
help("ccyclered")
litG
commonG
str(commonG)
help("litG")
library("graph")
mynodes<-c("Student_1","Student_2","Professor","Assistant","Assistant_wife","Assistant_wife_boss")
myedges<-list(
Student_1=list(edges=c("Assistant","Professor","Student_2")),
Student_2=list(edges=c("Assistant","Professor","Student_1")),
Professor=list(edges=c("Assistant","Student_1","Student_2")),
Assistant=list(edges=c("Professor","Student_1","Student_2","Assistant_wife")),
Assistant_wife =list(edges=c("Assistant","Assistant_wife_boss")),
Assistant_wife_boss =list(edges=c("Assistant_wife"))
)
g<-new("graphNEL",nodes=mynodes,edgeL=myedges,edgemode="undirected")
plot(g)
setwd("~/Desktop/Foldmod/secrete/cdhit_process/secondary struct")
Psites <- read.csv('ScD_structure.txt', header=T, sep="\t")
ScD <- read.csv('ScD_structure.txt', header=T, sep="\t")
ScE <- read.csv('ScE_structure.txt', header=T, sep="\t")
wilcox.test(ScD$H,ScE$H)
wilcox.test(ScD$E,ScE$E)
wilcox.test(ScD$C,ScE$C)
ScD <- read.csv('PpD_structure.txt', header=T, sep="\t")
ScE <- read.csv('PpE_structure.txt', header=T, sep="\t")
wilcox.test(ScD$C,ScE$C)
wilcox.test(ScD$E,ScE$E)
wilcox.test(ScD$H,ScE$H)
ScD <- read.csv('ScD_structure.txt', header=T, sep="\t")
ScE <- read.csv('ScE_structure.txt', header=T, sep="\t")
wilcox.test(ScD$C,ScE$C)
wilcox.test(ScD$C,ScE$C,paired=T)
wilcox.test(ScD$C,ScE$C)
wilcox.test(ScD$H,ScE$H)
wilcox.test(ScD$E,ScE$E)
ScD <- read.csv('ScD_structure1.txt', header=T, sep="\t")
ScE <- read.csv('ScE_structure1.txt', header=T, sep="\t")
wilcox.test(ScD$E,ScE$E)
wilcox.test(ScD$H,ScE$H)
wilcox.test(ScD$C,ScE$C)
ScD$St<-ScD$H+ScD$E
View(ScD)
wilcox.test(ScD$st,ScE$C)
wilcox.test(ScD$St,ScE$C)
ScE$St<-ScE$H+ScE$E
wilcox.test(ScD$St,ScE$St)
